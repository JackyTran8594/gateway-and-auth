server:
  port: 8053
#  address: 172.19.0.2

eureka:
  client:
    serviceUrl:
#      defaultZone: http://172.18.0.2:8052/eureka/
#      defaultZone: http://localhost:8052/eureka/
#      defaultZone: http://ansv-registry-service:8052/eureka/
      defaultZone: http://host.docker.internal:8052/eureka/
#      defaultZone: http://172.22.0.2:8052/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    hostname: ansv-registry-service
spring:
  application:
    name: ansv-authorization
  ldap:
    embedded:
      ldif: classpath:test-server.ldif
      base-dn: dc=springframework,dc=org
      port: 8389
      validation:
        enabled: false
    server:
#      base: CN=Users,DC=ansv,DC=vn
       base: dc=springframework,dc=org
    authen:
#      url: ldap://172.24.104.6:389
#      url: ldap://localhost:8389
      url: ldap://host.docker.internal:8389
      base: dc=springframework,dc=org
#      managerDn: CN=Admin,CN=Users,DC=ansv,DC=vn
      managerDn: uid=admin,ou=people,dc=springframework,dc=org
      managerPassword: $2a$10$xgMeNxDvGTeI2u/MwPqKV.oIq8O1OeDEhcy8k19V.dTvLpWe88xRS
      dn-patterns: uid={0},ou=people,dc=springframework,dc=org
      filter: uid
      password: userPassword
  main:
    banner-mode: off
  datasource:
#    url: jdbc:postgresql://localhost:5432/Authorization
#    url: jdbc:postgresql://192.168.1.4:5432/Authorization
    url: jdbc:postgresql://192.168.88.152:5432/Authorization
    username: postgres
    password: root
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: none
  liquibase:
    enabled: false
  rabbitmq:
#    host: host.docker.internal
    host: 172.18.0.2
    port: 5672
    username: guest
    password: guest
    virtualHost: /
    exchange: task-management.req.events
    routingkey: detail.user.req
    queue: detail.user.task-management.req.queue
    exchange-received: user-received.exchange
    routingkey-received: user-received.routingkey
    queue-received: user-received.queue

logging:
  level:
    root: debug
  org:
    springframework: debug
  hibernate:
    SQL: true


#jwttoken
app:
  jwtSecret: 9a02115a835ee03d5fb83cd8a468ea33e4090aaaec87f53c9fa54512bbef4db8dc656c82a315fa0c785c08b0134716b81ddcd0153d2a7556f2e154912cf5675f
  tokenValidity: 604800000




    

